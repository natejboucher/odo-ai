{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/utils/session.server.ts", "../app/routes/join-campaign.tsx", "../app/routes/dashboard.tsx", "../app/routes/_index.tsx", "../app/routes/logout.tsx", "../app/routes/login.tsx", "../app/utils/db.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "/**\n * By default, Remix will handle generating the HTTP Response for you.\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\n * For more information, see https://remix.run/file-conventions/entry.server\n */\n\nimport { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { isbot } from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  // This is ignored so we can keep it in the template for visibility.  Feel\n  // free to delete this parameter in your app if you're not using it!\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\") || \"\")\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import {\n  Links,\n  Meta,\n  Outlet,\n  redirect,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\nimport type { LinksFunction, LoaderFunctionArgs } from \"@remix-run/node\";\n\nimport styles from \"./tailwind.css\";\nimport { getUserId } from \"./utils/session.server\";\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: styles }];\n\n\nexport const loader = async ({ request }: LoaderFunctionArgs) => {\n  const userId = await getUserId(request);\n\n  // If no session and NOT on the login page, redirect to login\n  if (!userId && new URL(request.url).pathname !== \"/login\") {\n    return redirect(\"/login\");\n  }\n\n  return null; // Allow access if logged in or on the login page\n};\n\nexport default function App() {\n  return (\n    <html lang='en'>\n      <head>\n        <meta charSet='utf-8' />\n        <meta name='viewport' content='width=device-width, initial-scale=1' />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n      </body>\n    </html>);\n\n}", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport { prisma } from \"../utils/db.server\";\n\nconst sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret) {\n  throw new Error(\"SESSION_SECRET must be set in your environment variables\");\n}\n\nconst storage = createCookieSessionStorage({\n  cookie: {\n    name: \"remix_session\",\n    secure: process.env.NODE_ENV === \"production\",\n    secrets: [sessionSecret],\n    sameSite: \"lax\",\n    path: \"/\",\n    httpOnly: true,\n  },\n});\n\n// Get the user ID from the session\nexport async function getUserId(request: Request): Promise<string | null> {\n  const session = await storage.getSession(request.headers.get(\"Cookie\"));\n  return session.get(\"userId\") || null;\n}\n\n// Require the user to be logged in, otherwise redirect to login\nexport async function requireUserId(request: Request): Promise<string> {\n  const userId = await getUserId(request);\n  if (!userId) {\n    throw redirect(\"/login\");\n  }\n  return userId;\n}\n\n// Log the user in by setting their ID in the session\nexport async function createUserSession(userId: string, redirectTo: string) {\n  const session = await storage.getSession();\n  session.set(\"userId\", userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await storage.commitSession(session),\n    },\n  });\n}\n\n// Destroy the session on logout\nexport async function logout(request: Request) {\n  const session = await storage.getSession(request.headers.get(\"Cookie\"));\n  return redirect(\"/login\", {\n    headers: {\n      \"Set-Cookie\": await storage.destroySession(session),\n    },\n  });\n}\n", "import { Link } from \"@remix-run/react\";\nimport type { MetaFunction } from \"@remix-run/node\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Join Campaign | ODO AI\" },\n    { name: \"description\", content: \"Join an existing campaign\" },\n  ];\n};\n\nexport default function JoinCampaign() {\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {/* Navigation */}\n      <nav className=\"bg-white shadow-lg\">\n        <div className=\"max-w-7xl mx-auto px-4\">\n          <div className=\"flex justify-between h-16\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0 flex items-center\">\n                <span className=\"text-2xl font-bold text-indigo-600\">ODO AI</span>\n              </div>\n              <div className=\"hidden sm:ml-6 sm:flex sm:space-x-8\">\n                <Link\n                  to=\"/dashboard\"\n                  className=\"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\n                >\n                  Dashboard\n                </Link>\n                <Link\n                  to=\"/join-campaign\"\n                  className=\"border-indigo-500 text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\n                >\n                  Join Campaign\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"max-w-md mx-auto\">\n          <div className=\"text-center mb-8\">\n            <h2 className=\"mt-6 text-3xl font-bold text-gray-900\">\n              Join a Campaign\n            </h2>\n            <p className=\"mt-2 text-sm text-gray-600\">\n              Enter the campaign code provided by your Dungeon Master\n            </p>\n          </div>\n\n          <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n            <form className=\"space-y-6\">\n              <div>\n                <label\n                  htmlFor=\"campaign-code\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Campaign Code\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"campaign-code\"\n                    name=\"campaign-code\"\n                    type=\"text\"\n                    required\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    placeholder=\"Enter your campaign code\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"character-name\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Character Name\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"character-name\"\n                    name=\"character-name\"\n                    type=\"text\"\n                    required\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    placeholder=\"Enter your character name\"\n                  />\n                </div>\n              </div>\n\n              <div>\n                <label\n                  htmlFor=\"character-sheet\"\n                  className=\"block text-sm font-medium text-gray-700\"\n                >\n                  Character Sheet URL (Optional)\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    id=\"character-sheet\"\n                    name=\"character-sheet\"\n                    type=\"url\"\n                    className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    placeholder=\"https://dndbeyond.com/characters/...\"\n                  />\n                </div>\n                <p className=\"mt-2 text-sm text-gray-500\">\n                  Supports D&D Beyond character sheets\n                </p>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  Join Campaign\n                </button>\n              </div>\n            </form>\n\n            <div className=\"mt-6\">\n              <div className=\"relative\">\n                <div className=\"absolute inset-0 flex items-center\">\n                  <div className=\"w-full border-t border-gray-300\" />\n                </div>\n                <div className=\"relative flex justify-center text-sm\">\n                  <span className=\"px-2 bg-white text-gray-500\">\n                    Or create your own\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"mt-6\">\n                <Link\n                  to=\"/dashboard\"\n                  className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-indigo-600 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                >\n                  Create a New Campaign\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\nimport type { MetaFunction } from \"@remix-run/node\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Dashboard | ODO AI\" },\n    { name: \"description\", content: \"Campaign dashboard\" },\n  ];\n};\n\nexport default function Dashboard() {\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {/* Navigation */}\n      <nav className=\"bg-white shadow-lg\">\n        <div className=\"max-w-7xl mx-auto px-4\">\n          <div className=\"flex justify-between h-16\">\n            <div className=\"flex\">\n              <div className=\"flex-shrink-0 flex items-center\">\n                <span className=\"text-2xl font-bold text-indigo-600\">ODO AI</span>\n              </div>\n              <div className=\"hidden sm:ml-6 sm:flex sm:space-x-8\">\n                <Link\n                  to=\"/dashboard\"\n                  className=\"border-indigo-500 text-gray-900 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\n                >\n                  Dashboard\n                </Link>\n                <Link\n                  to=\"/join-campaign\"\n                  className=\"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium\"\n                >\n                  Join Campaign\n                </Link>\n              </div>\n            </div>\n            <div className=\"flex items-center\">\n              <button className=\"bg-indigo-600 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-indigo-700\">\n                New Campaign\n              </button>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Main Content */}\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"md:flex md:items-center md:justify-between mb-8\">\n          <div className=\"flex-1 min-w-0\">\n            <h2 className=\"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">\n              Active Campaigns\n            </h2>\n          </div>\n        </div>\n\n        {/* Campaign Grid */}\n        <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3\">\n          {/* Sample Campaign Card */}\n          <div className=\"bg-white overflow-hidden shadow rounded-lg\">\n            <div className=\"p-5\">\n              <div className=\"flex items-center\">\n                <div className=\"w-0 flex-1\">\n                  <h3 className=\"text-lg font-medium text-gray-900\">\n                    The Lost Mines\n                  </h3>\n                  <p className=\"mt-1 text-sm text-gray-500\">\n                    DM: Chris Peterson\n                  </p>\n                </div>\n              </div>\n              <div className=\"mt-4\">\n                <p className=\"text-sm text-gray-500\">\n                  Next Session: Friday, 7:00 PM\n                </p>\n                <p className=\"mt-2 text-sm text-gray-500\">\n                  Players: 4/6\n                </p>\n              </div>\n            </div>\n            <div className=\"bg-gray-50 px-5 py-3\">\n              <div className=\"text-sm\">\n                <button className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n                  Enter Campaign\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Add Campaign Card */}\n          <div className=\"bg-gray-50 overflow-hidden shadow rounded-lg border-2 border-dashed border-gray-300\">\n            <div className=\"p-5 flex items-center justify-center\">\n              <button className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700\">\n                <svg className=\"-ml-1 mr-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clipRule=\"evenodd\" />\n                </svg>\n                New Campaign\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Recent Activity */}\n        <div className=\"mt-8\">\n          <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\n            Recent Activity\n          </h3>\n          <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n            <ul className=\"divide-y divide-gray-200\">\n              {[1, 2, 3].map((item) => (\n                <li key={item} className=\"px-4 py-4 sm:px-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <p className=\"text-sm font-medium text-indigo-600 truncate\">\n                      New message in The Lost Mines\n                    </p>\n                    <div className=\"ml-2 flex-shrink-0 flex\">\n                      <p className=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800\">\n                        2 min ago\n                      </p>\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import { Form } from \"@remix-run/react\";\n\nexport default function IndexPage() {\n  return (\n    <div>\n      <p>Hello World</p>\n      <Form method='post' action='/logout'>\n        <button type='submit'>Logout</button>\n      </Form>\n    </div>\n  );\n}\n", "import { ActionFunctionArgs, redirect } from \"@remix-run/node\";\nimport { logout } from \"../utils/session.server\";\n\nexport const action = async ({ request }: ActionFunctionArgs) => {\n  return logout(request);\n};\n\nexport const loader = async () => {\n  return redirect(\"/\"); // Prevent GET requests to this route\n};\n", "import { redirect } from \"@remix-run/node\";\nimport bcrypt from \"bcryptjs\";\nimport { prisma } from \"../utils/db.server\";\n\nimport { useActionData, Form } from \"@remix-run/react\";\nimport { createUserSession, getUserId } from \"../utils/session.server\";\nimport { useState } from \"react\";\nimport { toast } from \"react-toastify\";\n// import {\n//   Dialog,\n//   DialogBackdrop,\n//   DialogPanel,\n//   DialogTitle,\n// } from \"@headlessui/react\";\n\ntype ActionData = {\n  error?: string;\n};\n\ntype UserLogin = {\n  userName: string;\n  password: string;\n};\n\ntype CreateUser = UserLogin & {\n  email: string;\n};\n\nexport const loader = async ({ request }: { request: Request }) => {\n  const userId = await getUserId(request);\n  if (userId) {\n    return redirect(\"/\"); // Redirect logged-in users to the home page\n  }\n  return null;\n};\n\nasync function handleCreateUser(userArgs: CreateUser) {\n  const { userName, password, email } = userArgs;\n  const existingUser = await prisma.user.findUnique({ where: { userName } });\n  if (existingUser) {\n    return Response.json(\n      { error: \"Username already exists.\" },\n      { status: 400 }\n    );\n  }\n\n  const hashedPassword = await bcrypt.hash(password, 10);\n  const newUser = await prisma.user.create({\n    data: { userName, password: hashedPassword, email }, // Save email too\n  });\n\n  return createUserSession(newUser.id, \"/\");\n}\n\nasync function handleLogin(userArgs: UserLogin) {\n  const { userName, password } = userArgs;\n  const user = await prisma.user.findUnique({ where: { userName } });\n  if (!user || !(await bcrypt.compare(password, user.password))) {\n    toast.error(\"Invalid username or password!\");\n    return Response.json(\n      { error: \"All fields are required.\" },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession(user.id, \"/\");\n}\n\nexport const action = async ({ request }: { request: Request }) => {\n  const formData = await request.formData();\n  const actionType = formData.get(\"actionType\");\n  const userName = formData.get(\"userName\")?.toString();\n  const password = formData.get(\"password\")?.toString();\n  const email = formData.get(\"email\")?.toString(); // Only used for registration\n\n  if (!userName || !password) {\n    toast.error(\"Missing Username or Password!\");\n    return;\n  }\n\n  if (actionType === \"register\" && email) {\n    return handleCreateUser({ userName, password, email });\n  }\n\n  if (actionType === \"login\" && userName && password) {\n    return handleLogin({ userName, password });\n  }\n\n  return Response.json({ error: \"Invalid action.\" }, { status: 400 });\n};\n\nexport default function LoginPage() {\n  const actionData = useActionData<ActionData>();\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [open, setOpen] = useState(true);\n\n  return (\n    // <Dialog open={open} onClose={setOpen} className='relative z-10'>\n    //   <DialogBackdrop\n    //     transition\n    //     className='fixed inset-0 bg-gray-500/75 transition-opacity data-closed:opacity-0 data-enter:duration-300 data-enter:ease-out data-leave:duration-200 data-leave:ease-in'\n    //   />\n\n    //   <div className='fixed inset-0 z-10 w-screen overflow-y-auto'>\n    //     <div className='flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0'>\n    //       <DialogPanel\n    //         transition\n    //         className='relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all data-closed:translate-y-4 data-closed:opacity-0 data-enter:duration-300 data-enter:ease-out data-leave:duration-200 data-leave:ease-in sm:my-8 sm:w-full sm:max-w-lg data-closed:sm:translate-y-0 data-closed:sm:scale-95'\n    //       >\n    //         <div className='bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4'>\n    //           <div className='sm:flex sm:items-start'>\n    //             <div className='mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left'>\n    //               <DialogTitle\n    //                 as='h3'\n    //                 className='text-base font-semibold text-gray-900'\n    //               >\n    //                 Deactivate account\n    //               </DialogTitle>\n    //               <div className='mt-2'>\n    //                 <p className='text-sm text-gray-500'>\n    //                   Are you sure you want to deactivate your account? All of\n    //                   your data will be permanently removed. This action cannot\n    //                   be undone.\n    //                 </p>\n    //               </div>\n    //             </div>\n    //           </div>\n    //         </div>\n    //         <div className='bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6'>\n    //           <button\n    //             type='button'\n    //             onClick={() => setOpen(false)}\n    //             className='inline-flex w-full justify-center rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-xs hover:bg-red-500 sm:ml-3 sm:w-auto'\n    //           >\n    //             Deactivate\n    //           </button>\n    //           <button\n    //             type='button'\n    //             data-autofocus\n    //             onClick={() => setOpen(false)}\n    //             className='mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 shadow-xs ring-gray-300 ring-inset hover:bg-gray-50 sm:mt-0 sm:w-auto'\n    //           >\n    //             Cancel\n    //           </button>\n    //         </div>\n    //       </DialogPanel>\n    //     </div>\n    //   </div>\n    // </Dialog>\n    <div>\n      <h1>{isRegistering ? \"Register\" : \"Login\"}</h1>\n      {actionData?.error && <p style={{ color: \"red\" }}>{actionData.error}</p>}\n      <h1 className='text-3xl font-bold text-blue-500'>\n        Welcome to Remix with Tailwind!\n      </h1>\n      {isRegistering ? (\n        <Form method='post'>\n          <input type='text' name='userName' placeholder='Username' required />\n          <input\n            type='password'\n            name='password'\n            placeholder='Password'\n            required\n          />\n          <input type='email' name='email' placeholder='Email' required />\n          <button type='submit' name='actionType' value='register'>\n            Register\n          </button>\n          <p>\n            Already have an account?{\" \"}\n            <button type='button' onClick={() => setIsRegistering(false)}>\n              Log In\n            </button>\n          </p>\n        </Form>\n      ) : (\n        <Form method='post'>\n          <input type='text' name='userName' placeholder='Username' required />\n          <input\n            type='password'\n            name='password'\n            placeholder='Password'\n            required\n          />\n          <button type='submit' name='actionType' value='login'>\n            Log In\n          </button>\n          <p>\n            Don\u2019t have an account?{\" \"}\n            <button type='button' onClick={() => setIsRegistering(true)}>\n              Register\n            </button>\n          </p>\n        </Form>\n      )}\n    </div>\n  );\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db: PrismaClient | undefined;\n}\n\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n  }\n  prisma = global.__db;\n}\n\nexport { prisma };\n", "export default {'entry':{'module':'/build/entry.client-MLBFGVRK.js','imports':['/build/_shared/chunk-X3PXDGUE.js','/build/_shared/chunk-VDSBIO6G.js','/build/_shared/chunk-5GTPY5QC.js','/build/_shared/chunk-JR22VO6P.js','/build/_shared/chunk-PLT55Z5M.js','/build/_shared/chunk-F4KNNEUR.js','/build/_shared/chunk-2Z2JGDFU.js','/build/_shared/chunk-PZDJHGND.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-J5S5P7F7.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-22PBKHSV.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard-YE3V24B7.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/join-campaign':{'id':'routes/join-campaign','parentId':'root','path':'join-campaign','index':undefined,'caseSensitive':undefined,'module':'/build/routes/join-campaign-4VHIIFLL.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-HAYGPXJK.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-5GTPI7EF.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'45f1e4a3','hmr':{'runtime':'/build/_shared/chunk-5GTPY5QC.js','timestamp':1738367846771},'url':'/build/manifest-45F1E4A3.js'};", "\nimport * as entryServer from \"/Users/nateboucher/playground/odo-ai/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/join-campaign.tsx\";\nimport * as route2 from \"./routes/dashboard.tsx\";\nimport * as route3 from \"./routes/_index.tsx\";\nimport * as route4 from \"./routes/logout.tsx\";\nimport * as route5 from \"./routes/login.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"v3_routeConfig\":false,\"v3_singleFetch\":false,\"v3_lazyRouteDiscovery\":false,\"unstable_optimizeDeps\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/join-campaign\": {\n      id: \"routes/join-campaign\",\n      parentId: \"root\",\n      path: \"join-campaign\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    }\n  };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAMA,yBAA4B,wBAG5B,cAAiD,4BACjD,eAA4B,6BAC5B,eAAsB,kBACtB,gBAAuC,6BAsCjC,2DApCA,cAAc;AAEL,SAAR,cACL,SACA,oBACA,iBACA,cAIA,aACA;AACA,aAAO,oBAAM,QAAQ,QAAQ,IAAI,YAAY,KAAK,EAAE,IAChD;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACN;AAEA,SAAS,iBACP,SACA,oBACA,iBACA,cACA;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAI,gBAAgB,IACd,EAAE,MAAM,MAAM,QAAI;AAAA,MACtB;AAAA,QAAC;AAAA;AAAA,UACC,SAAS;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,YAAY;AAAA;AAAA,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,MACA;AAAA,QACE,aAAa;AACX,0BAAgB;AAChB,cAAM,OAAO,IAAI,+BAAY,GACvB,aAAS,8CAAiC,IAAI;AAEpD,0BAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,YACE,IAAI,SAAS,QAAQ;AAAA,cACnB,SAAS;AAAA,cACT,QAAQ;AAAA,YACV,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,aAAa,OAAgB;AAC3B,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,QAAQ,OAAgB;AACtB,+BAAqB,KAIjB,iBACF,QAAQ,MAAM,KAAK;AAAA,QAEvB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;AAEA,SAAS,qBACP,SACA,oBACA,iBACA,cACA;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAI,gBAAgB,IACd,EAAE,MAAM,MAAM,QAAI;AAAA,MACtB;AAAA,QAAC;AAAA;AAAA,UACC,SAAS;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,YAAY;AAAA;AAAA,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,MACA;AAAA,QACE,eAAe;AACb,0BAAgB;AAChB,cAAM,OAAO,IAAI,+BAAY,GACvB,aAAS,8CAAiC,IAAI;AAEpD,0BAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,YACE,IAAI,SAAS,QAAQ;AAAA,cACnB,SAAS;AAAA,cACT,QAAQ;AAAA,YACV,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,aAAa,OAAgB;AAC3B,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,QAAQ,OAAgB;AACtB,+BAAqB,KAIjB,iBACF,QAAQ,MAAM,KAAK;AAAA,QAEvB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;;;AC3IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,gBAOA;;;;;;ACPA,IAAAC,eAAqD,4BAG/C,gBAAgB,QAAQ,IAAI;AAClC,IAAI,CAAC;AACH,QAAM,IAAI,MAAM,0DAA0D;AAG5E,IAAM,cAAU,yCAA2B;AAAA,EACzC,QAAQ;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,SAAS,CAAC,aAAa;AAAA,IACvB,UAAU;AAAA,IACV,MAAM;AAAA,IACN,UAAU;AAAA,EACZ;AACF,CAAC;AAGD,eAAsB,UAAU,SAA0C;AAExE,UADgB,MAAM,QAAQ,WAAW,QAAQ,QAAQ,IAAI,QAAQ,CAAC,GACvD,IAAI,QAAQ,KAAK;AAClC;AAYA,eAAsB,kBAAkB,QAAgB,YAAoB;AAC1E,MAAM,UAAU,MAAM,QAAQ,WAAW;AACzC,iBAAQ,IAAI,UAAU,MAAM,OACrB,uBAAS,YAAY;AAAA,IAC1B,SAAS;AAAA,MACP,cAAc,MAAM,QAAQ,cAAc,OAAO;AAAA,IACnD;AAAA,EACF,CAAC;AACH;AAGA,eAAsB,OAAO,SAAkB;AAC7C,MAAM,UAAU,MAAM,QAAQ,WAAW,QAAQ,QAAQ,IAAI,QAAQ,CAAC;AACtE,aAAO,uBAAS,UAAU;AAAA,IACxB,SAAS;AAAA,MACP,cAAc,MAAM,QAAQ,eAAe,OAAO;AAAA,IACpD;AAAA,EACF,CAAC;AACH;;;ADrBQ,IAAAC,0BAAA,kCAnBK,QAAuB,MAAM;AAAA,EAC1C,EAAE,KAAK,cAAc,MAAM,iBAAO;AAAC,GAGtB,SAAS,OAAO,EAAE,QAAQ,MAIjC,CAHW,MAAM,UAAU,OAAO,KAGvB,IAAI,IAAI,QAAQ,GAAG,EAAE,aAAa,eACxC,wBAAS,QAAQ,IAGnB;AAGM,SAAR,MAAuB;AAC5B,SACE,oDAAC,UAAK,MAAK,MACT;AAAA,wDAAC,UACC;AAAA,0DAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,oDAAC,UAAK,MAAK,YAAW,SAAQ,yCAA9B;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,MACpE,oDAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,oDAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAJT;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,oDAAC,UACC;AAAA,0DAAC,0BAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,oDAAC,qCAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,oDAAC,2BAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OAXF;AAAA;AAAA;AAAA;AAAA,SAYA;AAEJ;;;AE5CA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC,gBAAqB,6BAmBLC,0BAAA,kCAhBH,OAAqB,MACzB;AAAA,EACL,EAAE,OAAO,yBAAyB;AAAA,EAClC,EAAE,MAAM,eAAe,SAAS,4BAA4B;AAC9D;AAGa,SAAR,eAAgC;AACrC,SACE,oDAAC,SAAI,WAAU,4BAEb;AAAA,wDAAC,SAAI,WAAU,sBACb,8DAAC,SAAI,WAAU,0BACb,8DAAC,SAAI,WAAU,6BACb,8DAAC,SAAI,WAAU,QACb;AAAA,0DAAC,SAAI,WAAU,mCACb,8DAAC,UAAK,WAAU,sCAAqC,sBAArD;AAAA;AAAA;AAAA;AAAA,aAA2D,KAD7D;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,oDAAC,SAAI,WAAU,uCACb;AAAA;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,WAAU;AAAA,YACX;AAAA;AAAA,UAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,QACA;AAAA,UAAC;AAAA;AAAA,YACC,IAAG;AAAA,YACH,WAAU;AAAA,YACX;AAAA;AAAA,UAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,WAZF;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,SAjBF;AAAA;AAAA;AAAA;AAAA,WAkBA,KAnBF;AAAA;AAAA;AAAA;AAAA,WAoBA,KArBF;AAAA;AAAA;AAAA;AAAA,WAsBA,KAvBF;AAAA;AAAA;AAAA;AAAA,WAwBA;AAAA,IAGA,oDAAC,UAAK,WAAU,+CACd,8DAAC,SAAI,WAAU,oBACb;AAAA,0DAAC,SAAI,WAAU,oBACb;AAAA,4DAAC,QAAG,WAAU,yCAAwC,+BAAtD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,OAAE,WAAU,8BAA6B,uEAA1C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MAEA,oDAAC,SAAI,WAAU,oDACb;AAAA,4DAAC,UAAK,WAAU,aACd;AAAA,8DAAC,SACC;AAAA;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,WAAU;AAAA,gBACX;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAKA;AAAA,YACA,oDAAC,SAAI,WAAU,QACb;AAAA,cAAC;AAAA;AAAA,gBACC,IAAG;AAAA,gBACH,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,UAAQ;AAAA,gBACR,WAAU;AAAA,gBACV,aAAY;AAAA;AAAA,cANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAOA,KARF;AAAA;AAAA;AAAA;AAAA,mBASA;AAAA,eAhBF;AAAA;AAAA;AAAA;AAAA,iBAiBA;AAAA,UAEA,oDAAC,SACC;AAAA;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,WAAU;AAAA,gBACX;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAKA;AAAA,YACA,oDAAC,SAAI,WAAU,QACb;AAAA,cAAC;AAAA;AAAA,gBACC,IAAG;AAAA,gBACH,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,UAAQ;AAAA,gBACR,WAAU;AAAA,gBACV,aAAY;AAAA;AAAA,cANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAOA,KARF;AAAA;AAAA;AAAA;AAAA,mBASA;AAAA,eAhBF;AAAA;AAAA;AAAA;AAAA,iBAiBA;AAAA,UAEA,oDAAC,SACC;AAAA;AAAA,cAAC;AAAA;AAAA,gBACC,SAAQ;AAAA,gBACR,WAAU;AAAA,gBACX;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAKA;AAAA,YACA,oDAAC,SAAI,WAAU,QACb;AAAA,cAAC;AAAA;AAAA,gBACC,IAAG;AAAA,gBACH,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,WAAU;AAAA,gBACV,aAAY;AAAA;AAAA,cALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMA,KAPF;AAAA;AAAA;AAAA;AAAA,mBAQA;AAAA,YACA,oDAAC,OAAE,WAAU,8BAA6B,oDAA1C;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,eAlBF;AAAA;AAAA;AAAA;AAAA,iBAmBA;AAAA,UAEA,oDAAC,SACC;AAAA,YAAC;AAAA;AAAA,cACC,MAAK;AAAA,cACL,WAAU;AAAA,cACX;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA,KANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,aAnEF;AAAA;AAAA;AAAA;AAAA,eAoEA;AAAA,QAEA,oDAAC,SAAI,WAAU,QACb;AAAA,8DAAC,SAAI,WAAU,YACb;AAAA,gEAAC,SAAI,WAAU,sCACb,8DAAC,SAAI,WAAU,qCAAf;AAAA;AAAA;AAAA;AAAA,mBAAiD,KADnD;AAAA;AAAA;AAAA;AAAA,mBAEA;AAAA,YACA,oDAAC,SAAI,WAAU,wCACb,8DAAC,UAAK,WAAU,+BAA8B,kCAA9C;AAAA;AAAA;AAAA;AAAA,mBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,eARF;AAAA;AAAA;AAAA;AAAA,iBASA;AAAA,UAEA,oDAAC,SAAI,WAAU,QACb;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,WAAU;AAAA,cACX;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA,KANF;AAAA;AAAA;AAAA;AAAA,iBAOA;AAAA,aAnBF;AAAA;AAAA;AAAA;AAAA,eAoBA;AAAA,WA3FF;AAAA;AAAA;AAAA;AAAA,aA4FA;AAAA,SAtGF;AAAA;AAAA;AAAA;AAAA,WAuGA,KAxGF;AAAA;AAAA;AAAA;AAAA,WAyGA;AAAA,OAtIF;AAAA;AAAA;AAAA;AAAA,SAuIA;AAEJ;;;ACrJA;AAAA;AAAA;AAAA,cAAAC;AAAA;AAAA,IAAAC,gBAAqB,6BAmBLC,0BAAA,kCAhBHF,QAAqB,MACzB;AAAA,EACL,EAAE,OAAO,qBAAqB;AAAA,EAC9B,EAAE,MAAM,eAAe,SAAS,qBAAqB;AACvD;AAGa,SAAR,YAA6B;AAClC,SACE,oDAAC,SAAI,WAAU,4BAEb;AAAA,wDAAC,SAAI,WAAU,sBACb,8DAAC,SAAI,WAAU,0BACb,8DAAC,SAAI,WAAU,6BACb;AAAA,0DAAC,SAAI,WAAU,QACb;AAAA,4DAAC,SAAI,WAAU,mCACb,8DAAC,UAAK,WAAU,sCAAqC,sBAArD;AAAA;AAAA;AAAA;AAAA,eAA2D,KAD7D;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,SAAI,WAAU,uCACb;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,WAAU;AAAA,cACX;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,UACA;AAAA,YAAC;AAAA;AAAA,cACC,IAAG;AAAA,cACH,WAAU;AAAA,cACX;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAKA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA,eAaA;AAAA,WAjBF;AAAA;AAAA;AAAA;AAAA,aAkBA;AAAA,MACA,oDAAC,SAAI,WAAU,qBACb,8DAAC,YAAO,WAAU,yFAAwF,4BAA1G;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,SAxBF;AAAA;AAAA;AAAA;AAAA,WAyBA,KA1BF;AAAA;AAAA;AAAA;AAAA,WA2BA,KA5BF;AAAA;AAAA;AAAA;AAAA,WA6BA;AAAA,IAGA,oDAAC,UAAK,WAAU,+CACd;AAAA,0DAAC,SAAI,WAAU,mDACb,8DAAC,SAAI,WAAU,kBACb,8DAAC,QAAG,WAAU,sEAAqE,gCAAnF;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA,KALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MAGA,oDAAC,SAAI,WAAU,wDAEb;AAAA,4DAAC,SAAI,WAAU,8CACb;AAAA,8DAAC,SAAI,WAAU,OACb;AAAA,gEAAC,SAAI,WAAU,qBACb,8DAAC,SAAI,WAAU,cACb;AAAA,kEAAC,QAAG,WAAU,qCAAoC,8BAAlD;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cACA,oDAAC,OAAE,WAAU,8BAA6B,kCAA1C;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,iBANF;AAAA;AAAA;AAAA;AAAA,mBAOA,KARF;AAAA;AAAA;AAAA;AAAA,mBASA;AAAA,YACA,oDAAC,SAAI,WAAU,QACb;AAAA,kEAAC,OAAE,WAAU,yBAAwB,6CAArC;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cACA,oDAAC,OAAE,WAAU,8BAA6B,4BAA1C;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,iBANF;AAAA;AAAA;AAAA;AAAA,mBAOA;AAAA,eAlBF;AAAA;AAAA;AAAA;AAAA,iBAmBA;AAAA,UACA,oDAAC,SAAI,WAAU,wBACb,8DAAC,SAAI,WAAU,WACb,8DAAC,YAAO,WAAU,qDAAoD,8BAAtE;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,iBAIA,KALF;AAAA;AAAA;AAAA;AAAA,iBAMA;AAAA,aA3BF;AAAA;AAAA;AAAA;AAAA,eA4BA;AAAA,QAGA,oDAAC,SAAI,WAAU,uFACb,8DAAC,SAAI,WAAU,wCACb,8DAAC,YAAO,WAAU,sJAChB;AAAA,8DAAC,SAAI,WAAU,sBAAqB,OAAM,8BAA6B,SAAQ,aAAY,MAAK,gBAC9F,8DAAC,UAAK,UAAS,WAAU,GAAE,yFAAwF,UAAS,aAA5H;AAAA;AAAA;AAAA;AAAA,iBAAsI,KADxI;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAAM;AAAA,aAHR;AAAA;AAAA;AAAA;AAAA,eAKA,KANF;AAAA;AAAA;AAAA;AAAA,eAOA,KARF;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,WA1CF;AAAA;AAAA;AAAA;AAAA,aA2CA;AAAA,MAGA,oDAAC,SAAI,WAAU,QACb;AAAA,4DAAC,QAAG,WAAU,oDAAmD,+BAAjE;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,SAAI,WAAU,iDACb,8DAAC,QAAG,WAAU,4BACX,WAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,SACd,oDAAC,QAAc,WAAU,qBACvB,8DAAC,SAAI,WAAU,qCACb;AAAA,8DAAC,OAAE,WAAU,gDAA+C,6CAA5D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,SAAI,WAAU,2BACb,8DAAC,OAAE,WAAU,6FAA4F,yBAAzG;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHF;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA,eASA,KAVO,MAAT;AAAA;AAAA;AAAA;AAAA,eAWA,CACD,KAdH;AAAA;AAAA;AAAA;AAAA,eAeA,KAhBF;AAAA;AAAA;AAAA;AAAA,eAiBA;AAAA,WArBF;AAAA;AAAA;AAAA;AAAA,aAsBA;AAAA,SA9EF;AAAA;AAAA;AAAA;AAAA,WA+EA;AAAA,OAjHF;AAAA;AAAA;AAAA;AAAA,SAkHA;AAEJ;;;AChIA;AAAA;AAAA;AAAA;AAAA,IAAAG,gBAAqB,6BAKfC,0BAAA;AAHS,SAAR,YAA6B;AAClC,SACE,oDAAC,SACC;AAAA,wDAAC,OAAE,2BAAH;AAAA;AAAA;AAAA;AAAA,WAAc;AAAA,IACd,oDAAC,sBAAK,QAAO,QAAO,QAAO,WACzB,8DAAC,YAAO,MAAK,UAAS,sBAAtB;AAAA;AAAA;AAAA;AAAA,WAA4B,KAD9B;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAJF;AAAA;AAAA;AAAA;AAAA,SAKA;AAEJ;;;ACXA;AAAA;AAAA;AAAA,gBAAAC;AAAA;AAAA,IAAAC,eAA6C;AAGtC,IAAM,SAAS,OAAO,EAAE,QAAQ,MAC9B,OAAO,OAAO,GAGVC,UAAS,gBACb,uBAAS,GAAG;;;ACRrB;AAAA;AAAA,gBAAAC;AAAA,EAAA;AAAA,gBAAAC;AAAA;AAAA,IAAAC,eAAyB,4BACzB,kBAAmB;;;ACDnB,oBAA6B,2BAEzB;AASG,OAAO,SACV,OAAO,OAAO,IAAI,2BAAa,IAEjC,SAAS,OAAO;;;ADVlB,IAAAC,gBAAoC;AAEpC,IAAAC,gBAAyB,kBACzB,wBAAsB,2BA+IhBC,0BAAA,kCA1HOC,UAAS,OAAO,EAAE,QAAQ,MACtB,MAAM,UAAU,OAAO,QAE7B,uBAAS,GAAG,IAEd;AAGT,eAAe,iBAAiB,UAAsB;AACpD,MAAM,EAAE,UAAU,UAAU,MAAM,IAAI;AAEtC,MADqB,MAAM,OAAO,KAAK,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;AAEvE,WAAO,SAAS;AAAA,MACd,EAAE,OAAO,2BAA2B;AAAA,MACpC,EAAE,QAAQ,IAAI;AAAA,IAChB;AAGF,MAAM,iBAAiB,MAAM,gBAAAC,QAAO,KAAK,UAAU,EAAE,GAC/C,UAAU,MAAM,OAAO,KAAK,OAAO;AAAA,IACvC,MAAM,EAAE,UAAU,UAAU,gBAAgB,MAAM;AAAA;AAAA,EACpD,CAAC;AAED,SAAO,kBAAkB,QAAQ,IAAI,GAAG;AAC1C;AAEA,eAAe,YAAY,UAAqB;AAC9C,MAAM,EAAE,UAAU,SAAS,IAAI,UACzB,OAAO,MAAM,OAAO,KAAK,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC;AACjE,SAAI,CAAC,QAAQ,CAAE,MAAM,gBAAAA,QAAO,QAAQ,UAAU,KAAK,QAAQ,KACzD,4BAAM,MAAM,+BAA+B,GACpC,SAAS;AAAA,IACd,EAAE,OAAO,2BAA2B;AAAA,IACpC,EAAE,QAAQ,IAAI;AAAA,EAChB,KAGK,kBAAkB,KAAK,IAAI,GAAG;AACvC;AAEO,IAAMC,UAAS,OAAO,EAAE,QAAQ,MAA4B;AACjE,MAAM,WAAW,MAAM,QAAQ,SAAS,GAClC,aAAa,SAAS,IAAI,YAAY,GACtC,WAAW,SAAS,IAAI,UAAU,GAAG,SAAS,GAC9C,WAAW,SAAS,IAAI,UAAU,GAAG,SAAS,GAC9C,QAAQ,SAAS,IAAI,OAAO,GAAG,SAAS;AAE9C,MAAI,CAAC,YAAY,CAAC,UAAU;AAC1B,gCAAM,MAAM,+BAA+B;AAC3C;AAAA;AAGF,SAAI,eAAe,cAAc,QACxB,iBAAiB,EAAE,UAAU,UAAU,MAAM,CAAC,IAGnD,eAAe,WAAW,YAAY,WACjC,YAAY,EAAE,UAAU,SAAS,CAAC,IAGpC,SAAS,KAAK,EAAE,OAAO,kBAAkB,GAAG,EAAE,QAAQ,IAAI,CAAC;AACpE;AAEe,SAAR,YAA6B;AAClC,MAAM,iBAAa,6BAA0B,GACvC,CAAC,eAAe,gBAAgB,QAAI,wBAAS,EAAK,GAClD,CAAC,MAAM,OAAO,QAAI,wBAAS,EAAI;AAErC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAqDE,oDAAC,SACC;AAAA,0DAAC,QAAI,0BAAgB,aAAa,WAAlC;AAAA;AAAA;AAAA;AAAA,aAA0C;AAAA,MACzC,YAAY,SAAS,oDAAC,OAAE,OAAO,EAAE,OAAO,MAAM,GAAI,qBAAW,SAAxC;AAAA;AAAA;AAAA;AAAA,aAA8C;AAAA,MACpE,oDAAC,QAAG,WAAU,oCAAmC,+CAAjD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACC,gBACC,oDAAC,sBAAK,QAAO,QACX;AAAA,4DAAC,WAAM,MAAK,QAAO,MAAK,YAAW,aAAY,YAAW,UAAQ,MAAlE;AAAA;AAAA;AAAA;AAAA,eAAmE;AAAA,QACnE;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,MAAK;AAAA,YACL,aAAY;AAAA,YACZ,UAAQ;AAAA;AAAA,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,QACA,oDAAC,WAAM,MAAK,SAAQ,MAAK,SAAQ,aAAY,SAAQ,UAAQ,MAA7D;AAAA;AAAA;AAAA;AAAA,eAA8D;AAAA,QAC9D,oDAAC,YAAO,MAAK,UAAS,MAAK,cAAa,OAAM,YAAW,wBAAzD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,OAAE;AAAA;AAAA,UACwB;AAAA,UACzB,oDAAC,YAAO,MAAK,UAAS,SAAS,MAAM,iBAAiB,EAAK,GAAG,sBAA9D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,WAjBF;AAAA;AAAA;AAAA;AAAA,aAkBA,IAEA,oDAAC,sBAAK,QAAO,QACX;AAAA,4DAAC,WAAM,MAAK,QAAO,MAAK,YAAW,aAAY,YAAW,UAAQ,MAAlE;AAAA;AAAA;AAAA;AAAA,eAAmE;AAAA,QACnE;AAAA,UAAC;AAAA;AAAA,YACC,MAAK;AAAA,YACL,MAAK;AAAA,YACL,aAAY;AAAA,YACZ,UAAQ;AAAA;AAAA,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA;AAAA,QACA,oDAAC,YAAO,MAAK,UAAS,MAAK,cAAa,OAAM,SAAQ,sBAAtD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,OAAE;AAAA;AAAA,UACsB;AAAA,UACvB,oDAAC,YAAO,MAAK,UAAS,SAAS,MAAM,iBAAiB,EAAI,GAAG,wBAA7D;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,WAhBF;AAAA;AAAA;AAAA;AAAA,aAiBA;AAAA,SA5CJ;AAAA;AAAA;AAAA;AAAA,WA8CA;AAAA;AAEJ;;;AErMA,IAAO,0BAAQ,EAAC,OAAQ,EAAC,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,EAAC,GAAE,QAAS,EAAC,MAAO,EAAC,IAAK,QAAO,UAAW,QAAU,MAAO,IAAG,OAAQ,QAAU,eAAgB,QAAU,QAAS,2BAA0B,SAAU,QAAU,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,iBAAgB,EAAC,IAAK,iBAAgB,UAAW,QAAO,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,oCAAmC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,oBAAmB,EAAC,IAAK,oBAAmB,UAAW,QAAO,MAAO,aAAY,OAAQ,QAAU,eAAgB,QAAU,QAAS,uCAAsC,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,wBAAuB,EAAC,IAAK,wBAAuB,UAAW,QAAO,MAAO,iBAAgB,OAAQ,QAAU,eAAgB,QAAU,QAAS,2CAA0C,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,gBAAe,EAAC,IAAK,gBAAe,UAAW,QAAO,MAAO,SAAQ,OAAQ,QAAU,eAAgB,QAAU,QAAS,mCAAkC,SAAU,QAAU,WAAY,IAAK,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,iBAAgB,EAAC,IAAK,iBAAgB,UAAW,QAAO,MAAO,UAAS,OAAQ,QAAU,eAAgB,QAAU,QAAS,oCAAmC,SAAU,QAAU,WAAY,IAAK,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,EAAC,GAAE,SAAU,YAAW,KAAM,EAAC,SAAU,oCAAmC,WAAY,cAAa,GAAE,KAAM,8BAA6B;;;ACQ3rE,IAAM,OAAO,eAEP,uBAAuB,gBACvB,SAAS,EAAC,mBAAoB,IAAM,sBAAuB,IAAM,qBAAsB,IAAM,gBAAiB,IAAM,gBAAiB,IAAM,uBAAwB,IAAM,uBAAwB,GAAK,GACtM,aAAa,WACb,QAAQ,EAAE,QAAQ,qBAAY,GAC9B,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,wBAAwB;AAAA,IACpB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,oBAAoB;AAAA,IAChB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,iBAAiB;AAAA,IACb,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,iBAAiB;AAAA,IACb,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,gBAAgB;AAAA,IACZ,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AACF;",
  "names": ["import_react", "import_node", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "meta", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "loader", "import_node", "loader", "action", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "loader", "bcrypt", "action"]
}
